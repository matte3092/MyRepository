# === SPRING ===
server.port=${SERVER_PORT}
#server.servlet.context-path=/ctx/v1

# Comment to enable Database feature
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.jpa.generate-ddl=${JPA_GENERATE_DDL}




# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=${JPA_DATABASE_PLATFORM}


# === LOGS ===
#settings.controllers.endpoints.log.enable=${LOG_ENDPOINTS_CALLS}
#settings.controllers.endpoints.body.log.enable=${LOG_ENDPOINTS_BODY}


# === RABBITMQ ===
#spring.rabbitmq.host=${RABBITMQ_HOST}
#spring.rabbitmq.port=${RABBITMQ_PORT}
#spring.rabbitmq.username=${RABBITMQ_USERNAME}
#spring.rabbitmq.password=${RABBITMQ_PASSWORD}
#rabbitmq.queue-name=${RABBITMQ_QUEUE_NAME}


# === KEYCLOAK ===
#This parameter enables/disables Keycloak security: for testing purposes
keycloak.enabled=false
#This parameter enables CORS on keycloak
keycloak.cors=true
#This parameter defines the Realm to be used
keycloak.realm=${KEYCLOAK_REALM}
#This parameter defines the authorization server URL
keycloak.auth-server-url=${KEYCLOAK_AUTH_SERVER_URL}
#This parameter contains the client secret generated by Keycloak client
keycloak.credentials.secret=${KEYCLOAK_CREDENTIAL_SECRET}
#This parameter defines the client to be used
keycloak.resource=${KEYCLOAK_RESOURCE}
#This parameter defines the HTTPS policy
keycloak.ssl-required=external
#This parameter enables/disables basic authentication
keycloak.enable-basic-auth=true
#This parameter defines which attribute is used as username
keycloak.principal-attribute=preferred_username
#This parameter enables/disables "bearer token only" security
keycloak.bearer-only=true
#If set to true, the adapter will look inside the token for application level role mappings for the user.
#If false, it will look at the realm level for user role mappings. This is OPTIONAL. The default value is false.
#keycloak.use-resource-role-mappings=true

#Keycloak security constraint
keycloak.security-constraints[0].authRoles[0]=user
keycloak.security-constraints[0].securityCollections[0].patterns[0]=/*
#keycloak.security-constraints[0].securityCollections[0].patterns[0]=/route/*
#keycloak.security-constraints[0].securityCollections[0].patterns[1]=/route/route2
#keycloak.security-constraints[0].securityCollections[0].patterns[2]=/route/route2/*